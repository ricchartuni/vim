" Carregar para programacao TEX ...........
echo "  > Carregando TEX .................."
exec "source" . g:vimdir . "programacao/sources/auTEX"

let b:comentario = '%'

autocmd BufNewFile *.tex      call NOVOc('so'.g:vimdir.'programacao/headers/headerTEX')

 " tab com espacos ..................
set smarttab
set softtabstop=2
set tabstop=2
set shiftwidth=2
set expandtab
autocmd FileType * retab

 " maximo de colunas ................
 " apply: select line and gq ........
" ** RChartuni >>nmap ,j {jv}kJvgq
" ** RChartuni >>nmap ,j ,w{jv}k,l{jv}kJ,svgq
nmap ,j :call TSTLinewrap()<CR>
set tw=72
set colorcolumn=72

func! TSTLinewrap()
   " achar primeira linha ...................
   call PRECMDpreserva()
   " ir ao inicio do paragrafo ..............
   norm {j
   let apos = getpos('.')
   let alin = line('.')
   call POSCMDpreserva()
   call PRECMDpreserva()
   " ir ao ponto anterior ......???..........
   norm {k
   let bpos = getpos('.')
   let blin = line('.')
   call POSCMDpreserva()
   if alin > blin
     let pos1 = apos
     let lin1 = alin
   else
     let pos1 = bpos
     let lin1 = blin
   endif

   " achar ultima linha .....................
   call PRECMDpreserva()
   " ir ao fim do paragrafo .................
   norm }
   let apos = getpos('.')
   let alin = line('.')
   call POSCMDpreserva()
   call PRECMDpreserva()
   " ir ao ponto posterior .....???..........
   norm }k
   let bpos = getpos('.')
   let blin = line('.')
   call POSCMDpreserva()
   if lin1 > blin
     norm vgq
     return
   else
     if alin < blin
       let pos2 = apos
     else
       let pos2 = bpos
     endif
   endif

   call setpos('.', pos1)
   norm v
   call setpos('.', pos2)
   norm Jvgq
endfunc

 " dicionario .......................
exec 'set dictionary+=' . g:vimdir . 'dic/latex.dic'
augroup txt_files "{{{
    au!
    autocmd BufRead,BufNewFile * setlocal filetype=tex
    autocmd FileType * setlocal wrap
    autocmd FileType * setlocal spell
    autocmd FileType * setlocal spelllang=en,pt
augroup end "}}}

call AutoCompleteDol('y')
" ===================================================

