" Carregar para programacao C .............
echo "  > Carregando C ...................."

exec "source" . g:vimdir . "programacao/sources/auC"

let b:comentario = "//"

if expand('%:t:r') =~# "^M"
   autocmd BufNewFile M*.c   call TipoProgC()
   autocmd BufNewFile M*.cc  call TipoProgC()
   autocmd BufNewFile M*.cpp call TipoProgC()
else
   autocmd BufNewFile  *.c   call TipoModC()
   autocmd BufNewFile  *.cc  call TipoModC()
   autocmd BufNewFile  *.cpp call TipoModC()
endif
autocmd BufNewFile *.h       call NOVOh('so'.g:vimdir.'programacao/headers/headerH')
autocmd BufNewFile *.hh      call NOVOh('so'.g:vimdir.'programacao/headers/headerH')

function! TipoProgC()
  echo "  > Programa C............"
  call NOVOc('so'.g:vimdir.'programacao/headers/headerC_')
endfunction

function! TipoModC()
  echo "  > Funcoes C............"
  call NOVOc('so'.g:vimdir.'programacao/headers/headerC')
endfunction


 " tab com espacos ..................
set smarttab
set softtabstop=3
set tabstop=3
set shiftwidth=3
set expandtab
autocmd FileType * retab

set smartindent
set autoindent
 "fechar automaticamente parentesis, colchetes, ....
inoremap (      ()<Left>
inoremap ((     (
inoremap ()     ()
inoremap (<CR>  (<CR>)<Esc>O

inoremap [      []<Left>
inoremap [[     [
inoremap []     []
inoremap [<CR>  [<CR>]<Esc>O

inoremap {      {}<Left>
inoremap {{     {
inoremap {}     {}
inoremap {<CR>  {<CR>}<Esc>O
 "inoremap {<CR>  {<CR>}<Esc>O<TAB>

inoremap "      ""<Left>
inoremap ""     "
inoremap "<CR>  "<CR>"<Esc>O

inoremap '      ''<Left>
inoremap ''     '
inoremap '<CR>  '<CR>'<Esc>O
" ===================================================

