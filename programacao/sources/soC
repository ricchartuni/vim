" Carregar para programacao C .............
echo "  > Carregando C ...................."

exec "source" . g:vimdir . "programacao/sources/auC"

let b:comentario = "//"

" C files ..................................
if expand('%:t:r') =~# "^M"
   autocmd BufNewFile M*.c   call TipoProgC()
   autocmd BufNewFile M*.cc  call TipoProgC()
   autocmd BufNewFile M*.cpp call TipoProgC()
else
   autocmd BufNewFile  *.c   call TipoModC()
   autocmd BufNewFile  *.cc  call TipoModC()
   autocmd BufNewFile  *.cpp call TipoModC()
endif
" ..........................................
" H files ..................................
if     g:arqname == "myrsf.h"
   autocmd BufNewFile *      call NOVOh('so'.g:vimdir.'programacao/headers/myrsfH')
elseif g:arqname == "mydbg.h"
   autocmd BufNewFile *      call NOVOh('so'.g:vimdir.'programacao/headers/mydbgH')
elseif g:arqname == "constantes.h"
   autocmd BufNewFile *      call NOVOh('so'.g:vimdir.'programacao/headers/constantesH')
else
   autocmd BufNewFile *.h    call NOVOh('so'.g:vimdir.'programacao/headers/headerH')
   autocmd BufNewFile *.hh   call NOVOh('so'.g:vimdir.'programacao/headers/headerH')
endif
" ..........................................

function! TipoProgC()
  echo "  > Programa C............"
  let tst = system('git remote --v')
  if tst =~# 'git@github.com:ricchartuni/src.git'
     call NOVOc('so'.g:vimdir.'programacao/headers/headergitC')
  else
     call NOVOc('so'.g:vimdir.'programacao/headers/headerC')
     call NOVOc('so'.g:vimdir.'programacao/headers/headerC_')
  endif
endfunction

function! TipoModC()
  echo "  > Funcoes C............"
  let tst = system('git remote --v')
  if tst =~# 'git@github.com:ricchartuni/src.git'
     call NOVOc('so'.g:vimdir.'programacao/headers/headermodC')
  else
     call NOVOc('so'.g:vimdir.'programacao/headers/headerC')
  endif
endfunction

 " troca estrutura '.' '->' .........
nnoremap st :call ToggleIt(3)<CR>
vnoremap st <esc>:call ToggleIt(4)<CR>

" null structure ........
vnoremap nu <esc>:call STRUCTNull()<CR>
function! STRUCTNull()
   call PRECMDpreserva()
   "----------------------------------------------------------
   let pattern____ = '[*]\+'
   let replacement = ' \* '
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   let pattern____ = '[ ]\+'
   let replacement = ' '
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   let pattern____ = '^ '
   let replacement = '      '
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   let pattern____ = ' \*'
   let replacement = '*'
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   "----------------------------------------------------------
   let pattern____ = 'int \(.*\);'
   let replacement = 'st->\1 = myinulo;'
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   "----------------------------------------------------------
   let pattern____ = 'float \(.*\);'
   let replacement = 'st->\1 = myrnulo;'
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   "----------------------------------------------------------
   let pattern____ = 'size_t \(.*\);'
   let replacement = 'st->\1 = mysnulo;'
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   "----------------------------------------------------------
   let pattern____ = 'FILE\* \(.*\);'
   let replacement = 'st->\1 =  stderr;'
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   "----------------------------------------------------------
   let pattern____ = '\w\+\* \(.*\);'
   let replacement = 'st->\1 =    NULL;'
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   "----------------------------------------------------------
   '<,'>v/st->/s/\(\w\+\) \(.*\);/st->\2 = \1;/
   "----------------------------------------------------------
   '<,'>normal f=30i 
   '<,'>normal 25|dw 
   call POSCMDpreserva()
endfunction

" null structure ........
vnoremap err <esc>:call ERRlocal()<CR>
function! ERRlocal()
   call PRECMDpreserva()
   "----------------------------------------------------------
   let pattern____ = '#define I\(ERR\w\+\)[ ]\+\w\+.*'
   let replacement = '         case I\1:'
   let replacement = replacement.'            strcpy(cerr, C\1);'
   let replacement = replacement.'            break;'
   silent! execute "'<,'>s/".pattern____."/".replacement."/g"
   "----------------------------------------------------------
   call POSCMDpreserva()
endfunction

 " tab com espacos ..................
set smarttab
set softtabstop=3
set tabstop=3
set shiftwidth=3
set expandtab
autocmd FileType * retab
" ===================================================

