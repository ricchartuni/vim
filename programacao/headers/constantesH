:insert
#ifndef __constantes_H__
#define __constantes_H__

#ifndef         mypi
#define         mypi 3.141592653589793116
#endif
#ifndef        mymax
#define   mymax(x,y) ((x)>(y)?(x):(y))
#endif
#ifndef        mymin
#define   mymin(x,y) ((x)<(y)?(x):(y))
#endif
#ifndef       mynint
#define    mynint(x) ((int)((x)>0.0?(x)+0.5:(x)-0.5))
#endif
#ifndef        mysqr
#define     mysqr(x) ((x)*(x))
#endif
#ifndef    mydeg2rad
#define mydeg2rad(x) ((  .0174532925199)*(x))
#endif
#ifndef    myrad2deg
#define myrad2deg(x) ((57.2957795131   )*(x))
#endif
#ifndef       myswap
#define  myswap(x,y) {typeof(x) dum=(x); (x)=(y); (y)=dum;}
#endif
#ifndef        mysim
#define        mysim 1
#endif
#ifndef        mynao
#define        mynao 0
#endif
#ifndef  myfunc_fail
#define  myfunc_fail 1
#endif
#ifndef  myfunc___ok
#define  myfunc___ok 0
#endif
#ifndef      myinulo
#define      myinulo -99999
#endif
#ifndef      mylnulo
#define      mylnulo (long) myinulo
#endif
#ifndef      myrnulo
#define      myrnulo -99999.
#endif
#ifndef      mydnulo
#define      mydnulo (double) myrnulo
#endif


#ifndef myind2D
#define myind2D(i1,i2,             n1            ) (((n1)                    *(i2)) +        (i1                        ))
#endif
#ifndef myind3D
#define myind3D(i1,i2,i3,          n1,n2         ) (((n1)*(n2)               *(i3)) + myind2D(i1,i2,         n1         ))
#endif
#ifndef myind4D
#define myind4D(i1,i2,i3,i4,       n1,n2,n3      ) (((n1)*(n2)*(n3)          *(i4)) + myind3D(i1,i2,i3,      n1,n2      ))
#endif
#ifndef myind5D
#define myind5D(i1,i2,i3,i4,i5,    n1,n2,n3,n4   ) (((n1)*(n2)*(n3)*(n4)     *(i5)) + myind4D(i1,i2,i3,i4,   n1,n2,n3   ))
#endif
#ifndef myind6D
#define myind6D(i1,i2,i3,i4,i5,i6, n1,n2,n3,n4,n5) (((n1)*(n2)*(n3)*(n4)*(n5)*(i6)) + myind5D(i1,i2,i3,i4,i5,n1,n2,n3,n4))
#endif

//---------------------------------------
//para arrays alocados estaticamente
#ifndef tamanho
#define tamanho(arr) (sizeof arr/sizeof *arr)
#endif
#ifndef preenche
#define preenche(arr, val) for(int i_##arr=0;i_##arr<tamanho(arr);i_##arr++)arr[i_##arr]=val;
#endif
//---------------------------------------


#ifdef __cplusplus
extern "C" {
#endif


#ifdef __cplusplus
}
#endif


#endif
.
