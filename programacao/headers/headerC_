:insert
#include <assert.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#include <rsf.h>

//======================================================================
   static void trun(char *cmsg, const clock_t t1, const clock_t t2){
//---------------------------------------------------------------------
      double tr = (double) (t2-t1)/CLOCKS_PER_SEC;
      fprintf(stderr,"  ** RChartuni>> %s %lf\n", cmsg, tr);
   }
//======================================================================

//======================================================================
   int main(int argc, char *argv[]){
//---------------------------------------------------------------------
// Descricao: Programa principal para processamento no Madagascar
//  OBS.: compilar com as opcoes:
//          -I$RSFROOT/include -L$RSFROOT/lib -lrsf -lm [-D_NOBLAS]
//---------------------------------------------------------------------
//        *** Criado por: .............. XXXNAMEXXX
//        *** Criado em: ..................... XX.XX.XXXX
//        *** Ultima modificacao: .... XX:XX - XX.XX.XXXX
//        *** Modificado por: ........
//======================================================================
      int   n1;
      int   n2;
      int   i1;
      int   i2;
      float clip;
      float *trace = NULL;
      clock_t t000;
      clock_t tbeg;
      clock_t tend;
      sf_file sfin  = NULL;
      sf_file sfout = NULL;

#ifdef _DEBUG___
      fprintf(stderr,"  ** XXXINITXXX>> =======================\n");
      fprintf(stderr,"  ** XXXINITXXX>> Testando programa\n"      );
      fprintf(stderr,"  ** XXXINITXXX>> =======================\n");
      fflush (stderr);
#endif

      tbeg  = clock();
      t000  = tbeg;

      // Initialize RSF
      sf_init(argc,argv);
      sfin  = sf_input("in");
      sfout = sf_output("out");

      if (SF_FLOAT != sf_gettype(sfin)) sf_error("Need float input");

      if (!sf_histint(sfin,"n1",&n1))   sf_error("No n1= in input");
      n2 = sf_leftsize(sfin,1);

      if (!sf_getfloat("clip",&clip)) sf_error("Need clip=");

      tend  = clock();
      trun("Inicializacao ..........", tbeg, tend);

      tbeg  = clock();
      trace = sf_floatalloc(n1);
      tend  = clock();
      trun("Alocacao ...............", tbeg, tend);

      tbeg  = clock();
      for (i2=0; i2 < n2; i2++){
         sf_floatread(trace,n1,sfin);
         for (i1=0; i1 < n1; i1++){
            if      (trace[i1] >  clip) trace[i1]= clip;
            else if (trace[i1] < -clip) trace[i1]=-clip;
         }
         sf_floatwrite(trace,n1,sfout);
      }
      tend  = clock();
      trun("Processamento ..........", tbeg, tend);

      tbeg  = clock();
      free(trace);
      sf_close();
      tend  = clock();
      trun("Liberacao de memoria ...", tbeg, tend);

      fprintf(stderr,"  ** RChartuni>> =======================\n");
      trun("Total do programa ......", t000, tend);
      exit(0);
   }
//======================================================================

.
