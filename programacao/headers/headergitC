:insert
//#define _USE_MPIONLY__
#ifdef _USE_MPIONLY__
#ifdef _USAR_MPI___
#define _BUILD_MYBINARY___
#define _USAR_MAINMPI___
#endif
#else
#define _BUILD_MYBINARY___
#endif
//---------------------------
#ifdef _BUILD_MYBINARY___
//---------------------------
#define __XXXXXXX_C__
#include "XXXXXXX.h"
//---------------------------
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
//---------------------------
#ifdef _USAR_MPI___
#ifndef _USAR_MAINMPI___
#define _USAR_MAINMPI___
#endif
#endif
//---------------------------
#include "mydbg.h"
#ifdef _DEBUG___
//#define _LOCALDEBUG___
#endif
//---------------------------
#include "constantes.h"
#include "myrsf.h"
#include "rsfutl.h"
#include "mpiutl.h"
#include "defclock.h"
#include "mylog.h"
//---------------------------
#define __MYRSFCMDOPC__
#ifdef __MYRSFCMDOPC__
#define myrsfinit(AC,AV) rsfopcinit(AC,AV)
#else
#define myrsfinit(AC,AV) rsfinit(AC,AV)
#endif
//---------------------------
#define PROG_INIT "Initialize program"
#define PROG_NULL "initialize structures"
#define PROG__INP "input information"
#define PROG__OUT "output information"
#define PROGALLOC "allocate memory"
//---------------------------
#ifdef _USAR_MAINMPI___
#define PROC_INFO "MPI proccessing"
#else
#define PROC_INFO "Proccessing"
#endif
#define PROG_READ "read input data"
#define PROG__WRT "write data"
//---------------------------
#define PROG_KILL "Finalize program"
#define PROG_FREE "free memory"
//---------------------------
#define CERR_NOTDEFINED   "Error not defined .........."
//---------------------------
//---------------------------
//---------------------------
static FILE    * flog;
//---------------------------

//======================================================================
   static void main_proc(){
//---------------------------------------------------------------------
      // -----------------------
      // Proccess info .........
      char* cjob = PROC_INFO;
      int   njob = 2;
      MYLOG_HDR("%s\n",PROC_INFO);
      // -----------------------
      // Read ..................
      // -----------------------
      main_read();
      // -----------------------
      // Proccess ..............
      // -----------------------
#ifdef _USAR_MAINMPI___
      if(ismanager())
         mpisendalltasks(njob, cjob, flog);
      else{
#endif
         // -----------------------
         // CLOCK proccess ........
         defclock_proc();
         // -----------------------
         mpitask_str task;
         int irecv = mpiworker_taskbeg(&task, njob, cjob, flog);
         while(irecv >= 0){
            irecv = mpireceivetask(&task);
         }
         mpiworker_taskend(&task);
#ifdef _USAR_MAINMPI___
      }
#endif
      // -----------------------
      // Write .................
      // -----------------------
      main_write();
   }
//======================================================================
//======================================================================
   static void main_read(){
//---------------------------------------------------------------------
#ifdef _USAR_MAINMPI___
      if(isworker()){
#endif
         // -----------------------
         // CLOCK read ............
         defclock_read();
         // -----------------------
         MYLOG_PRN("%s\n",PROG_READ);
#ifdef _USAR_MAINMPI___
      }
#endif
   }
//======================================================================
//======================================================================
   static void main_write(){
//---------------------------------------------------------------------
#ifdef _USAR_MAINMPI___
      if(isworker()){
#endif
         // -----------------------
         // CLOCK write ...........
         defclockwrite();
         // -----------------------
         MYLOG_PRN("%s\n",PROG__WRT);
#ifdef _USAR_MAINMPI___
      }
#endif
   }
//======================================================================
//======================================================================
   static void main_parmout(){
//---------------------------------------------------------------------
#ifdef _USAR_MAINMPI___
      if(isworker()){
#endif
         MYLOG_PRN("%s\n",PROG__OUT);
#ifdef _USAR_MAINMPI___
      }
#endif
   }
//======================================================================
//======================================================================
   static void main_parminp(){
//---------------------------------------------------------------------
      MYLOG_PRN("%s\n",PROG__INP);
   }
//======================================================================
//======================================================================
   static void main_alloc(){
//---------------------------------------------------------------------
#ifdef _USAR_MAINMPI___
      if(isworker()){
#endif
         // -----------------------
         // CLOCK alloc ...........
         defclockalloc();
         // -----------------------
         MYLOG_PRN("%s\n",PROGALLOC);
#ifdef _USAR_MAINMPI___
      }
#endif
   }
//======================================================================
//======================================================================
   static void main_free(){
//---------------------------------------------------------------------
#ifdef _USAR_MAINMPI___
      if(isworker()){
#endif
         MYLOG_PRN("%s\n",PROG_FREE);
#ifdef _USAR_MAINMPI___
      }
#endif
   }
//======================================================================
//======================================================================
   static void main_null(){
//---------------------------------------------------------------------
      MYLOG_PRN("%s\n",PROG_NULL);
   }
//======================================================================
//======================================================================
   static char *main_errtype(const int itype, char *cerr){
//---------------------------------------------------------------------
      switch(itype){
         default:
            strcpy(cerr, CERR_NOTDEFINED);
            break;
      }
      return cerr;
   }
//======================================================================
//======================================================================
   int main(int argc, char *argv[]){
//---------------------------------------------------------------------
//  ..................................................... Main program
//  Do not need to change from here ..................................
//---------------------------------------------------------------------
//        *** Created by: .............. XXXNAMEXXX
//        *** Created on: .................... XX.XX.XXXX
//        *** Last modification: ..... XX:XX - XX.XX.XXXX
//        *** Modified by: ...........
//======================================================================
#define main_kill() main_kill0(0, NULL)
      // -----------------------
      // Initialize ............
      // -----------------------
      main_init(argc, argv);
      // -----------------------
      // Allocation ............
      // -----------------------
      main_alloc();
      // -----------------------
      // Proccess ..............
      // -----------------------
      main_proc();
      // -----------------------
      // Finish program ........
      // -----------------------
      main_kill();
   }
//======================================================================
//======================================================================
   static void main_err(const int iret, const int ierr){
//---------------------------------------------------------------------
      if(iret == 0) return;
      // ------------------------
      // Found error ......
      // ------------------------
      char cerr[1024];
      main_errtype(ierr, cerr);
      strcat(cerr, "\n");
      main_kill0(ierr, cerr);
   }
//======================================================================
//======================================================================
   static void main_kill0(const int iend, char *cerr){
//---------------------------------------------------------------------
      // -----------------------
      MYLOG_HDR("%s\n",PROG_KILL);
      // -----------------------
      // CLOCK free ............
      defclock_free();
      // -----------------------
      // -----------------------
      // Free memory ...........
      // -----------------------
      main_free();
      // -----------------------
      // Finalize RSF ..........
      // -----------------------
      sf_close();
      // -----------------------
      // Finalize CLOCK ........
      // -----------------------
      if(iend == 0)
         defclock_kill(flog);
      // -----------------------
      // Finalize LOGFILE ......
      // -----------------------
      MYLOG_KILL(iend,cerr);
#ifdef _USAR_MAINMPI___
      // -----------------------
      // Finalize MPI ..........
      // -----------------------
      mympi_finalize();
#endif
      // -----------------------
      // Finalize Program ......
      // -----------------------
      exit(iend);
   }
//======================================================================
//======================================================================
   static void main_init(int argc, char *argv[]){
//---------------------------------------------------------------------
      // -----------------------
      // Initialize CLOCK ......
      // -----------------------
      defclock_init();
#ifdef _USAR_MAINMPI___
      // -----------------------
      // Initialize MPI ........
      // -----------------------
      mympi_init(argc,argv);
#endif
      // -----------------------
      // Initialize RSF ........
      // -----------------------
      myrsfinit(argc,argv);
      // -----------------------
      // Initialize LOGFILE ....
      // -----------------------
      flog = MYLOG_INIT(argv, sf_getstring("log"));
      // -----------------------
      MYLOG_HDR("%s\n",PROG_INIT);
      // -----------------------
      // NULL structures .......
      // -----------------------
      main_null();
      // -----------------------
      // Input parameters ......
      // -----------------------
      main_parminp();
      // -----------------------
      // Output parameters .....
      // -----------------------
      main_parmout();
   }
//======================================================================
#else
#include "no_mpi.h"
#endif
.
